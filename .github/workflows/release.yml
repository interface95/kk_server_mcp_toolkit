name: Release

on:
  push:
    tags:
      - 'v*'  # 推送 v* 标签时触发（如 v1.0.0）
  workflow_dispatch:  # 手动触发

permissions:
  contents: write  # 需要写权限来创建 Release

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifacts (Unix)
        if: runner.os != 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf kk_server_mcp_toolkit-${{ matrix.name }}.tar.gz kk_server_mcp_toolkit
          mv kk_server_mcp_toolkit-${{ matrix.name }}.tar.gz ${{ github.workspace }}/

      - name: Prepare artifacts (Windows)
        if: runner.os == 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          Compress-Archive -Path kk_server_mcp_toolkit.exe -DestinationPath ${{ github.workspace }}/kk_server_mcp_toolkit-${{ matrix.name }}.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kk_server_mcp_toolkit-${{ matrix.name }}
          path: |
            *.tar.gz
            *.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
